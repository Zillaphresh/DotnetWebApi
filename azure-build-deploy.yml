trigger:
 branches:
  include:
    - main

pool:
 name: local
 demands:
  - agent.name -equals macAgent

variables:
  buildConfiguration: 'Release'
  output: weatherApp
stages:
  - stage: Build
    jobs:
    - job: Test_Build
      steps:
        - task: DotNetCoreCLI@2
          displayName: 'dotnet build'
          inputs:
            command: 'build'
            projects: '**/*.csproj'
            arguments: '--configuration $(buildConfiguration)'
            workingDirectory: '$(System.DefaultWorkingDirectory)'

        # - task: DotNetCoreCLI@2
        #   displayName: 'dotnet test'
        #   inputs:
        #     command: 'test'
        #     projects: '**/*.csproj'
        #     arguments: '--configuration $(buildConfiguration)'
        #     testRunTitle: 'dotnet test'
        #     workingDirectory: '$(System.DefaultWorkingDirectory)'
        - task: DotNetCoreCLI@2
          inputs:
            command: 'publish'
            publishWebProjects: true
            arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'

        - task: SSH@0
          displayName: 'Creating a directory'
          inputs:
            sshEndpoint: 'ec2-dotnet'
            runOptions: 'commands'
            commands: 'sudo mkdir -p /var/www/html'
            readyTimeout: '20000'
        - task: CopyFilesOverSSH@0
          inputs:
            sshEndpoint: 'ec2-dotnet'
            sourceFolder: '$(Build.ArtifactStagingDirectory)'
            contents: '**'
            targetFolder: '/var/www/html/'
            readyTimeout: '20000'
        

        # - task: PublishBuildArtifacts@1
        #   inputs:
        #     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        #     ArtifactName: 'drop'
        #     publishLocation: 'Container'
        
        
  # - stage: Deploy_Dev
  #   dependsOn: Build
  #   jobs:
  #     - job: DownloadArtifacts
  #       steps:
          # - task: DownloadBuildArtifacts@1
          #   inputs:
          #     buildType: 'specific'
          #     project: '5f3cb466-abf0-435f-b35b-bb893740642e'
          #     pipeline: '3'
          #     specificBuildWithTriggering: true
          #     buildVersionToDownload: 'latest'
          #     downloadType: 'single'
          #     downloadPath: '$(System.ArtifactsDirectory)'
          # - task: CopyFilesOverSSH@0
          #   inputs:
          #     sshEndpoint: 'ec2-dotnet'
          #     sourceFolder: '$(Build.ArtifactStagingDirectory)'
          #     contents: '**'
          #     targetFolder: '/var/www/html/'
          #     readyTimeout: '20000'
          
    
        
